import { ASK_WORD, EMAIL_ERROR, LOGIN_BUTTON, LOGIN_TITLE, PASSWORD_ERROR, SIGN_UP_BUTTON } from "@/constants";
import useAuth from "@/hooks/useAuth";
import Head from "next/head";
import Image from "next/image";
import { useState } from "react";
import { SubmitHandler, useForm } from "react-hook-form";

interface Inputs {
	email: string;
	password: string;
}

function Login() {
	const [login, setLogin] = useState(false);
	const { signIn, signUp } = useAuth();

	const {
		register,
		handleSubmit,
		watch,
		formState: { errors },
	} = useForm<Inputs>();

	const onSubmit: SubmitHandler<Inputs> = async ({ email, password }) => {
		if (login) {
			await signIn(email, password);
		} else {
			await signUp(email, password);
		}
	};

	return (
		<div className="relative flex h-screen w-screen flex-col bg-black md:items-center md:justify-center md:bg-transparent">
			<Head>
				<title>Netflix</title>
				<meta name="description" content="Generated by create next app" />
				<meta name="viewport" content="width=device-width, initial-scale=1" />
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<Image src="/assets/netflix-bg.jpg" className="-z-10  opacity-60 sm:!inline" layout="fill" objectFit="cover" alt={"login-bg"} />
			<Image
				src="https://upload.wikimedia.org/wikipedia/commons/0/08/Netflix_2015_logo.svg"
				alt="netflix-logo"
				width={100}
				height={100}
				className="cursor-pointer object-contain absolute left-4 top-4 md:left-10 md:top-6"
			/>

			<form
				onSubmit={handleSubmit(onSubmit)}
				className="relative mt-24 space-y-8 rounded bg-black/75 py-10 px-6 md:mt-0 md:max-w-md md:px-14"
			>
				<h1 className="text-4xl font-semibold">{LOGIN_TITLE}</h1>
				<div className="space-y-4">
					<label className="inline-block w-full">
						<input type="email" placeholder="Email" className="input" {...register("email", { required: true })} />
						{errors.email && <p className="p-1 text-[13px] font-light  text-orange-500">{EMAIL_ERROR}</p>}
					</label>
					<label className="inline-block w-full">
						<input type="password" placeholder="Password" className="input" {...register("password", { required: true })} />
						{errors.password && <p className="p-1 text-[13px] font-light  text-orange-500">{PASSWORD_ERROR}</p>}
					</label>
				</div>
				<button className="w-full rounded bg-[#E50914] py-3 font-semibold" type="submit" onClick={() => setLogin(true)}>
					{LOGIN_BUTTON}
				</button>
				<div className="text-[gray]">
					{ASK_WORD}{" "}
					<button className="cursor-pointer text-white hover:underline" type="submit" onClick={() => setLogin(false)}>
						{SIGN_UP_BUTTON}
					</button>
				</div>
			</form>
		</div>
	);
}

export default Login;
